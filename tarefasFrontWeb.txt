Front end e Web dev
• HTML semântico, 
• TailwindCSS, 
• Layout dinâmico e moderno,
• Responsividade para desktop, tablet e mobile
• Sistema de login simples para controle de acesso
• Navegação entre diferentes páginas da aplicação
• Integração com serviços externos para obtenção de dados (APIs)
• Gestão de exceções e falhas durante a execução

**No final, devem ser realizados testes de camadas críticas do sistema, descrever detalhadamente os pontos de acesso da API e gerar dados de teste (usuário padrão) para testar nosso sistema

Criar repositório no GitHub (frontend e backend separados ou monorepo).

 Configurar projeto React + TailwindCSS (Vite ou Create React App).

 Configurar backend com NodeJS + Express.

 Conectar frontend ↔ backend via API REST.

 Criar dados de teste diretamente no backend:


⦁	Criar repositório no GitHub (frontend e backend separados ou monorepo).

⦁	 Configurar projeto React + TailwindCSS (Vite ou Create React App).

⦁	 Configurar backend com NodeJS + Express.

⦁	 Conectar frontend ↔ backend via API REST.

⦁	 Criar dados de teste diretamente no backend:

Frontend
⦁	Usuário padrão (email, senha, pontos, etc).

⦁	Lista de eventos fictícios.

⦁	Criar layout base (Navbar, Footer, rotas).

⦁	 Implementar responsividade para desktop, tablet e mobile.

⦁	 Criar Página Inicial:

⦁	Botões de Login e Cadastrar.

⦁	Seção explicando o projeto e a história do Passa a Bola.

⦁	Seção de notícias/postagens (integrar API externa de notícias esportivas + espaço para postagens próprias).

⦁	 Criar Tela de Cadastro:

⦁	Inputs: Nome de usuário, Email, Telefone, Data de Nascimento, Senha e Confirmar Senha.

⦁	 Criar Tela de Login:

⦁	Inputs: Email e Senha.

⦁	 Criar Tela de Quiz de Boas-Vindas:

⦁	Pergunta para classificar usuária como Atleta, Técnica ou Olheira.

⦁	 Criar Painel da Jogadora:

⦁	Exibir foto, nome e pontos.

⦁	Criar botões de navegação: Ranking, Histórico, Meus Eventos, Explorar Eventos, Peneiras Abertas, Conquistas.

⦁	 Criar Página Meus Eventos:

⦁	Listar eventos registrados pela usuária.

⦁	Botão Mais informações → mostra detalhes do evento.

⦁	Gerar QR Code de check-in (só habilitado no dia do evento).

Backend
⦁	Criar rotas de autenticação (/login, /register) com dados salvos em memória.

⦁	 Implementar JWT para controle de acesso.

⦁	 Criar rota /quiz para salvar tipo de usuária (em memória).

⦁	 Criar rota /user/:id para retornar dados da usuária (foto, pontos, etc).

⦁	 Criar rota /events para listar eventos disponíveis (dados mockados).

⦁	 Criar rota /events/:id para exibir detalhes do evento.

⦁	 Criar rota /events/:id/checkin para gerar e validar QR Code (em memória).

⦁	 Integrar API externa de notícias de esportes.

⦁	 Criar sistema de tratamento de erros (try/catch + mensagens amigáveis).


Testes
⦁	Criar usuário padrão de teste (email: teste@passabola.com
, senha: 123@Teste).

⦁	 Criar eventos fictícios em array no backend.

⦁	 Criar testes de:

⦁	Login e cadastro.

⦁	Autorização com JWT.

⦁	Cadastro em eventos.

⦁	Geração de QR Code.

⦁	API de notícias funcionando.

⦁	 Documentar pontos de acesso da API (endpoints, parâmetros, exemplos de request/response).
